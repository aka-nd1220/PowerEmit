<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".g.cs" #>
<#
var opcodes = new []
{
    new OpCodeInfo("Beq"),
    new OpCodeInfo("Bge"),
    new OpCodeInfo("Bge_Un"),
    new OpCodeInfo("Bgt"),
    new OpCodeInfo("Bgt_Un"),
    new OpCodeInfo("Ble"),
    new OpCodeInfo("Ble_Un"),
    new OpCodeInfo("Blt"),
    new OpCodeInfo("Blt_Un"),
    new OpCodeInfo("Bne_Un"),
    new OpCodeInfo("Br"),
    new OpCodeInfo("Brfalse"),
    new OpCodeInfo("Brtrue"),
    new OpCodeInfo("Leave"),
};
#>
using System;
using System.Collections.Generic;
using System.Reflection.Emit;

namespace PowerEmit.Emit
{
<#
foreach(var opcode in opcodes)
{
#>

    public sealed class <#=opcode.Name#>_Opt : BranchOptOperation
    {
        protected override OpCode ShortVersionOpCode => OpCodes.<#=opcode.Name#>_S;
        public override OpCode OpCode => OpCodes.<#=opcode.Name#>;
        internal <#=opcode.Name#>_Opt(CilLabel label) : base(label) {}
    }

<#
}
#>
}
<#+
public struct OpCodeInfo
{
    public string Name { get; }

    public OpCodeInfo(string name)
    {
        Name = name;
    }
}
#>
